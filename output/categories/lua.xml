<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Jason Wu's Thoughts and Writings (文章分类：lua)</title><link>https://vimer.im/</link><description></description><atom:link rel="self" type="application/rss+xml" href="https://vimer.im/categories/lua.xml"></atom:link><language>zh_cn</language><copyright>Contents © 2018 &lt;a href="mailto:jasonwux@gmail.com"&gt;JasonWu&lt;/a&gt; </copyright><lastBuildDate>Sat, 24 Feb 2018 08:13:15 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>如何判断一个值在lua的table里</title><link>https://vimer.im/posts/search_for_an_item_in_a_lua_list/</link><dc:creator>JasonWu</dc:creator><description>&lt;div&gt;&lt;p&gt;最近在用lua写一个nginx模块时，遇到一个需要判断一个值是否在一个table里的问题，我有一个类似如下的一个table:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_c1e6776e10474f4fb94504861cf87512-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;"apple"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"orange"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"pear"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"banana"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;我怎样去判断orange是否在这个table里，在python里我可以使用如下的方法：&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e6a75492e314492bb71044ddb51a3997-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;"orange"&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e6a75492e314492bb71044ddb51a3997-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# do something&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;在lua里如何实现类似的方法呢？&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.lua.org/pil/11.5.html"&gt;Programming in Lua&lt;/a&gt; 中提供了一种方法：&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_03ea325f412b49e0bbd2d6bb269f6bfb-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_03ea325f412b49e0bbd2d6bb269f6bfb-2"&gt;&lt;/a&gt;  &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;a name="rest_code_03ea325f412b49e0bbd2d6bb269f6bfb-3"&gt;&lt;/a&gt;  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ipairs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;
&lt;a name="rest_code_03ea325f412b49e0bbd2d6bb269f6bfb-4"&gt;&lt;/a&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;
&lt;a name="rest_code_03ea325f412b49e0bbd2d6bb269f6bfb-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;你可以使用一个类似set的结构，具体使用的方法如下：&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_3d95468306924feea3f33767a01ff610-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;"apple"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"orange"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"pear"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"banana"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_3d95468306924feea3f33767a01ff610-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_3d95468306924feea3f33767a01ff610-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"orange"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
&lt;a name="rest_code_3d95468306924feea3f33767a01ff610-4"&gt;&lt;/a&gt;  &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt;
&lt;a name="rest_code_3d95468306924feea3f33767a01ff610-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;上面的这个方法和下面的这个方法等同：&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_de0ef0796e6b4b12b90ef0f4a771e610-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;apple&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pear&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;banana&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_de0ef0796e6b4b12b90ef0f4a771e610-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apple&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
&lt;a name="rest_code_de0ef0796e6b4b12b90ef0f4a771e610-3"&gt;&lt;/a&gt;    &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt;
&lt;a name="rest_code_de0ef0796e6b4b12b90ef0f4a771e610-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;这个方法足够简单吧，并且效率上要比遍历这个table要高。&lt;/p&gt;
&lt;p&gt;-- eof --&lt;/p&gt;&lt;/div&gt;</description><category>lua</category><guid>https://vimer.im/posts/search_for_an_item_in_a_lua_list/</guid><pubDate>Thu, 23 May 2013 12:17:59 GMT</pubDate></item></channel></rss>